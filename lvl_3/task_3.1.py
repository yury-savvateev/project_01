# Задача 3.1.
# Создайте класс матрицы (или таблицы).
# Требования к классу:
#   - каждая колонка является числом от 1 до n (n любое число, которые вы поставите!)
#   - в каждой ячейке содержится либо число, либо None
#   - доступы следующие методы матрицы:
#       * принимать новые значения, 
#       * заменять существующие значения, 
#       * выводить число строк и колонок.

# Пример матрицы 10 на 10 из единиц:
# [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]

# Примечание! 
#   - новый класс не запрещено строить на базе существующих типов данных: списков, словарей и тд.
#   - отображать в таблице/матрице название колонки не обязательно!
#   - использовать готовые классы numpy.array() и pandas.DataFrame() запрещено!
#   - проявите фантазию :)



# Введем переменную choice как признак желаний пользователя. 
# Переменная будет принимать значения:
# m - создать матрицу
# a - добавить или заменить одно значение в матрице (здесь можно усложнить алгоритм добавлением в еще несуществующую область матрицы)
# i - заменить значение в матрице
# r - увеличить размер матрицы, добавив row строк и col колонок
# n - вывод количества строк и колонок матрицы
# s - вывод значений матрицы
# переменную sign и значение value будем передавать в параметрах функций
import pprint, textwrap
from classes_lvl_3 import My_matrix

matrix = My_matrix() # создаем экземпляр класса
choice = ''
while choice != 'q':
    # Выведем инструкцию к скрипту
    message_instruction = ('Для создания или пересоздания матрицы, введите букву "m";'
                           '\nдля увеличения размера матрицы, введите букву "r";'
                           '\nдля добавления значения в матрицу в определенную ячейку введите букву "a";'
                           '\nдля поиска и изменения нескольких значений в матрице введите букву "i";'
                           '\nвывести количество строк и колонок матрицы, введите букву "n";'
                           '\nвывести значения матрицы, введите букву "s";'
                           '\nдля выхода из программы введите букву "q";'
                           '\nВАЖНО! НУМЕРАЦИЯ СТРОК И КОЛОНОК ИДЕТ С 1 (ЕДИНИЦЫ).')
    print(textwrap.indent(message_instruction, '                '))
       
    input_of_user = matrix.ask_what_to_do() # Спросим у пользователя, что он хочет сделать
    choice = input_of_user[1]
    if choice == "q":
        break
    if choice == None:
        print('Введен символ отличный от "m", "a", "r", "i", "q" либо матрица пуста!\nЗапустите скрипт снова снова.')
        break            
    else:
        if input_of_user[1] == "n": # Если признак "n", то вывод количества строк и колонок в матрице
            print(f'Число строк матрицы: {matrix.get_num_rows()}') # выводим число строк
            print(f'Число колонок матрицы: {matrix.get_num_cols()}') # выводим число колонок
        elif input_of_user[1] == "s": # Если признак "s", то вывод значений матрицы
            pprint.pprint(matrix.data) # выведем матрицу
        else:
            # если признак желаний пользователя другой, то проверим все ли правильно ввел пользователь
            # и преобразуем строковый ввод пользователя в целочисленные значения
            result = matrix.input_validation(input_of_user[0], input_of_user[1])
            if result != False:
                if result[1] == "m":
                    if matrix.create_table(result[0]):
                        print(f'Матрица {result[0][0]}x{result[0][1]} со значениями "None" создана!') # создаем матрицу row х col со значениями NULL
                    else:
                        print('При создании матрицы произошла непредвиденная ошибка!\nЗапустите скрипт снова.')
                        break
                elif result[1] == "a":
                    matrix.set_value(result[0]) # признак действия "a", значит добавляем или заменяем одно значение в матрице
                elif result[1] == "i":
                    matrix.replace_value(result[0]) # признак действия "i", значит заменяем указанный перечень значений на заданные значени в матрице
                elif result[1] == "r":
                    matrix.add_empty_rows_cols(result[0]) # признак действия "r", увеличиваем размер матрицы, добавив заданное количество строк и колонок
            else:
                print('Вы допустили ошибку при вводе данных!\nЗапустите скрипт снова.')
                break                  
            